version: "3"

networks:
  apinetwork:
  dbnetwork:
  tasknetwork:

volumes:
  pg_data:
  redis_data:

services:
  db:
    image: postgres:latest
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - dbnetwork
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust

  redis:
    image: redis:5-buster
    networks:
      - tasknetwork
    volumes:
      - redis_data:/data
    command: redis-server

  nginx:
    image: nginx:latest
    ports:
      - 127.0.0.1:3333:80
      # - 0.0.0.0:3333:80
      # - 0.0.0.0:443:443
    networks:
      - apinetwork
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./yinyang.ico:/etc/nginx/html/favicon.ico
      # - /etc/letsencrypt:/etc/letsencrypt
      - "./src/static:/etc/nginx/static"

  tem-api:
    build: .
    container_name: localhost
    image: tem-api:latest
    command: sh runserver.sh
    networks:
      - dbnetwork
      - apinetwork
    volumes:
      - ./src:/opt/tem-api
    depends_on:
      - db
      - redis
    restart: always

  celery:
    image: tem-api:latest
    networks:
      - dbnetwork
      - tasknetwork
    environment:
      - CELERY_BROKER_URL=redis://redis
    volumes:
      - ./src:/opt/tem-api
    command: ["celery", "-A", "djreact", "worker", "-B", "-l", "info"]
    depends_on:
      - tem-api
      - redis
      - db
